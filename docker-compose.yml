services:
  reverse_proxy:
      image: traefik:v2.7
      container_name: traefik
      command:
        - "--api.insecure=true"  # Enable the Traefik dashboard (use with caution in production)
        - "--providers.docker=true"  # Enable Docker provider
        - "--entrypoints.web.address=:80"  # Expose HTTP
        - "--entrypoints.websecure.address=:443"  # Expose HTTPS
      ports:
        - "80:80"     # HTTP
        - "443:443"   # HTTPS
        - "8080:8080" # Traefik dashboard
      networks:
        - sad-app
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik-dashboard.rule=Host(`sadapi.khesir.com`)"  # Route Traefik dashboard to `/traefik`
        - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"  # Forward to internal port 8080 (Traefik dashboard)
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock   
  backend:
    container_name: backend
    build: ./
    ports:
      - "5000:5000"
    networks:
      - sad-app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      PROFILE_BUCKET: ${PROFILE_BUCKET}
      SERVER_PORT: ${SERVER_PORT}
      NODE_ENV: ${NODE_ENV}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`sadapi.khesir.com`)"  # Route backend traffic to `/api`
      - "traefik.http.services.backend.loadbalancer.server.port=5000"  # Forward to internal port 3000



networks:
  sad-app:
    driver: bridge
      
      